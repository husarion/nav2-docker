version: "2.3"

services:

  # ROS Foxy navigation
  nav2:
    image: husarion/nav2:foxy
    tty: true
    restart: on-failure
    volumes:
      - ./config:/ros2_ws/src/husarion_nav2/config
    command: ros2 launch husarion_nav2 bringup_both.launch.py


  # ROS Foxy Rviz2 VNC
  rviz2:
    image: husarion/ros2-desktop-vnc:latest
    restart: on-failure
    ports: 
      - 6080:80
    volumes:
      - ./rosbot_pro.rviz:/root/.rviz2/default.rviz
    shm_size: '512m'


  # ROS Noetic + ROS 2 Foxy
  bridge:
    image: ros:foxy-ros1-bridge
    restart: on-failure
    environment:
      - "ROS_IP=bridge"
      - "ROS_MASTER_URI=http://my-ros-master:11311"
    command: ros2 run ros1_bridge dynamic_bridge


  # ROS Melodic master
  my-ros-master:
    image: ros:melodic-ros-core
    restart: on-failure
    tty: true 
    environment:
      - "ROS_IP=my-ros-master"
      - "ROS_MASTER_URI=http://my-ros-master:11311"    
    command: stdbuf -o L roscore


  # ROS Melodic rosbot hardware layer
  rosbot:
    image: husarion/rosbot
    tty: true      
    environment:
      - "ROS_IP=rosbot"
      - "ROS_MASTER_URI=http://my-ros-master:11311"
      - "SERIAL_PORT=/dev/ttyS4" # default: ttyS1 - rosbot2.0; ttyS4 - rosbot2.0 `pro
    restart: on-failure
    devices:
      - "/dev/ttyS4"   # must match environment SERIAL_PORT 
    command: roslaunch rosbot_description rosbot_docker.launch
    

  # ROS Melodic Rplidar
  rplidar:
    image: husarion/rplidar:latest
    restart: unless-stopped
    environment:
      - "ROS_IP=rplidar"
      - "ROS_MASTER_URI=http://my-ros-master:11311"
    devices:
      - /dev/ttyUSB0
    tty: true      
    command: roslaunch rplidar_ros rplidar_a3.launch # For Rosbot 2.0 PRO use roslaunch rplidar_ros rplidar_a3.launch
